{"version":3,"sources":["DrawerItemList.tsx"],"names":["React","CommonActions","DrawerActions","useLinkBuilder","DrawerItem","DrawerItemList","state","navigation","descriptors","buildLink","routes","map","route","i","focused","index","title","drawerLabel","drawerIcon","drawerActiveTintColor","drawerInactiveTintColor","drawerActiveBackgroundColor","drawerInactiveBackgroundColor","drawerLabelStyle","drawerItemStyle","key","options","undefined","name","params","dispatch","closeDrawer","navigate","target"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,aADF,EAEEC,aAFF,EAKEC,cALF,QAMO,0BANP;AAOA,OAAOC,UAAP,MAAuB,cAAvB;;AASA;AACA;AACA;AACA,eAAe,SAASC,cAAT,CAAwB;AACrCC,EAAAA,KADqC;AAErCC,EAAAA,UAFqC;AAGrCC,EAAAA;AAHqC,CAAxB,EAIL;AACR,QAAMC,SAAS,GAAGN,cAAc,EAAhC;AAEA,SAAQG,KAAK,CAACI,MAAN,CAAaC,GAAb,CAAiB,CAACC,KAAD,EAAQC,CAAR,KAAc;AACrC,UAAMC,OAAO,GAAGD,CAAC,KAAKP,KAAK,CAACS,KAA5B;AACA,UAAM;AACJC,MAAAA,KADI;AAEJC,MAAAA,WAFI;AAGJC,MAAAA,UAHI;AAIJC,MAAAA,qBAJI;AAKJC,MAAAA,uBALI;AAMJC,MAAAA,2BANI;AAOJC,MAAAA,6BAPI;AAQJC,MAAAA,gBARI;AASJC,MAAAA;AATI,QAUFhB,WAAW,CAACI,KAAK,CAACa,GAAP,CAAX,CAAuBC,OAV3B;AAYA,wBACE,oBAAC,UAAD;AACE,MAAA,GAAG,EAAEd,KAAK,CAACa,GADb;AAEE,MAAA,KAAK,EACHR,WAAW,KAAKU,SAAhB,GACIV,WADJ,GAEID,KAAK,KAAKW,SAAV,GACAX,KADA,GAEAJ,KAAK,CAACgB,IAPd;AASE,MAAA,IAAI,EAAEV,UATR;AAUE,MAAA,OAAO,EAAEJ,OAVX;AAWE,MAAA,eAAe,EAAEK,qBAXnB;AAYE,MAAA,iBAAiB,EAAEC,uBAZrB;AAaE,MAAA,qBAAqB,EAAEC,2BAbzB;AAcE,MAAA,uBAAuB,EAAEC,6BAd3B;AAeE,MAAA,UAAU,EAAEC,gBAfd;AAgBE,MAAA,KAAK,EAAEC,eAhBT;AAiBE,MAAA,EAAE,EAAEf,SAAS,CAACG,KAAK,CAACgB,IAAP,EAAahB,KAAK,CAACiB,MAAnB,CAjBf;AAkBE,MAAA,OAAO,EAAE,MAAM;AACbtB,QAAAA,UAAU,CAACuB,QAAX,CAAoB,EAClB,IAAIhB,OAAO,GACPZ,aAAa,CAAC6B,WAAd,EADO,GAEP9B,aAAa,CAAC+B,QAAd,CAAuBpB,KAAK,CAACgB,IAA7B,CAFJ,CADkB;AAIlBK,UAAAA,MAAM,EAAE3B,KAAK,CAACmB;AAJI,SAApB;AAMD;AAzBH,MADF;AA6BD,GA3CO,CAAR;AA4CD","sourcesContent":["import * as React from 'react';\nimport {\n  CommonActions,\n  DrawerActions,\n  DrawerNavigationState,\n  ParamListBase,\n  useLinkBuilder,\n} from '@react-navigation/native';\nimport DrawerItem from './DrawerItem';\nimport type { DrawerNavigationHelpers, DrawerDescriptorMap } from '../types';\n\ntype Props = {\n  state: DrawerNavigationState<ParamListBase>;\n  navigation: DrawerNavigationHelpers;\n  descriptors: DrawerDescriptorMap;\n};\n\n/**\n * Component that renders the navigation list in the drawer.\n */\nexport default function DrawerItemList({\n  state,\n  navigation,\n  descriptors,\n}: Props) {\n  const buildLink = useLinkBuilder();\n\n  return (state.routes.map((route, i) => {\n    const focused = i === state.index;\n    const {\n      title,\n      drawerLabel,\n      drawerIcon,\n      drawerActiveTintColor,\n      drawerInactiveTintColor,\n      drawerActiveBackgroundColor,\n      drawerInactiveBackgroundColor,\n      drawerLabelStyle,\n      drawerItemStyle,\n    } = descriptors[route.key].options;\n\n    return (\n      <DrawerItem\n        key={route.key}\n        label={\n          drawerLabel !== undefined\n            ? drawerLabel\n            : title !== undefined\n            ? title\n            : route.name\n        }\n        icon={drawerIcon}\n        focused={focused}\n        activeTintColor={drawerActiveTintColor}\n        inactiveTintColor={drawerInactiveTintColor}\n        activeBackgroundColor={drawerActiveBackgroundColor}\n        inactiveBackgroundColor={drawerInactiveBackgroundColor}\n        labelStyle={drawerLabelStyle}\n        style={drawerItemStyle}\n        to={buildLink(route.name, route.params)}\n        onPress={() => {\n          navigation.dispatch({\n            ...(focused\n              ? DrawerActions.closeDrawer()\n              : CommonActions.navigate(route.name)),\n            target: state.key,\n          });\n        }}\n      />\n    );\n  }) as React.ReactNode) as React.ReactElement;\n}\n"]}