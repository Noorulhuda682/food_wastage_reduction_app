{"version":3,"sources":["createDrawerNavigator.tsx"],"names":["DrawerNavigator","initialRouteName","openByDefault","backBehavior","children","screenOptions","lazy","drawerContentOptions","rest","defaultScreenOptions","Object","assign","drawerPosition","drawerType","swipeEdgeWidth","edgeWidth","drawerHideStatusBarOnOpen","hideStatusBar","keyboardDismissMode","swipeMinDistance","minSwipeDistance","overlayColor","drawerStatusBarAnimation","statusBarAnimation","gestureHandlerProps","JSON","stringify","state","descriptors","navigation","DrawerRouter"],"mappings":";;;;;;;AAAA;;AACA;;AAUA;;AACA;;;;;;;;;;AAWA,SAASA,eAAT,CAAyB;AACvBC,EAAAA,gBADuB;AAEvBC,EAAAA,aAFuB;AAGvBC,EAAAA,YAHuB;AAIvBC,EAAAA,QAJuB;AAKvBC,EAAAA,aALuB;AAMvB;AACAC,EAAAA,IAPuB;AAQvB;AACAC,EAAAA,oBATuB;AAUvB,KAAGC;AAVoB,CAAzB,EAWU;AACR,MAAIC,oBAA6C,GAAG,EAApD;;AAEA,MAAIF,oBAAJ,EAA0B;AACxBG,IAAAA,MAAM,CAACC,MAAP,CAAcF,oBAAd,EAAoC;AAClCG,MAAAA,cAAc,EAAEL,oBAAoB,CAACK,cADH;AAElCC,MAAAA,UAAU,EAAEN,oBAAoB,CAACM,UAFC;AAGlCC,MAAAA,cAAc,EAAEP,oBAAoB,CAACQ,SAHH;AAIlCC,MAAAA,yBAAyB,EAAET,oBAAoB,CAACU,aAJd;AAKlCC,MAAAA,mBAAmB,EAAEX,oBAAoB,CAACW,mBALR;AAMlCC,MAAAA,gBAAgB,EAAEZ,oBAAoB,CAACa,gBANL;AAOlCC,MAAAA,YAAY,EAAEd,oBAAoB,CAACc,YAPD;AAQlCC,MAAAA,wBAAwB,EAAEf,oBAAoB,CAACgB,kBARb;AASlCC,MAAAA,mBAAmB,EAAEjB,oBAAoB,CAACiB;AATR,KAApC;AAYA,2BACEjB,oBADF,wMAEiMkB,IAAI,CAACC,SAAL,CAC7LjB,oBAD6L,EAE7L,IAF6L,EAG7L,CAH6L,CAFjM;AAQD;;AAED,MAAI,OAAOH,IAAP,KAAgB,SAApB,EAA+B;AAC7BG,IAAAA,oBAAoB,CAACH,IAArB,GAA4BA,IAA5B;AAEA,2BACE,IADF;AAID;;AAED,QAAM;AAAEqB,IAAAA,KAAF;AAASC,IAAAA,WAAT;AAAsBC,IAAAA;AAAtB,MAAqC,kCAMzCC,oBANyC,EAM3B;AACd7B,IAAAA,gBADc;AAEdC,IAAAA,aAFc;AAGdC,IAAAA,YAHc;AAIdC,IAAAA,QAJc;AAKdC,IAAAA,aALc;AAMdI,IAAAA;AANc,GAN2B,CAA3C;AAeA,sBACE,oBAAC,mBAAD,eACMD,IADN;AAEE,IAAA,KAAK,EAAEmB,KAFT;AAGE,IAAA,WAAW,EAAEC,WAHf;AAIE,IAAA,UAAU,EAAEC;AAJd,KADF;AAQD;;eAEc,oCAKb7B,eALa,C","sourcesContent":["import * as React from 'react';\nimport {\n  createNavigatorFactory,\n  useNavigationBuilder,\n  DefaultNavigatorOptions,\n  DrawerNavigationState,\n  DrawerRouterOptions,\n  DrawerRouter,\n  DrawerActionHelpers,\n  ParamListBase,\n} from '@react-navigation/native';\nimport warnOnce from 'warn-once';\nimport DrawerView from '../views/DrawerView';\nimport type {\n  DrawerNavigationOptions,\n  DrawerNavigationConfig,\n  DrawerNavigationEventMap,\n} from '../types';\n\ntype Props = DefaultNavigatorOptions<DrawerNavigationOptions> &\n  DrawerRouterOptions &\n  DrawerNavigationConfig;\n\nfunction DrawerNavigator({\n  initialRouteName,\n  openByDefault,\n  backBehavior,\n  children,\n  screenOptions,\n  // @ts-expect-error: lazy is deprecated\n  lazy,\n  // @ts-expect-error: drawerContentOptions is deprecated\n  drawerContentOptions,\n  ...rest\n}: Props) {\n  let defaultScreenOptions: DrawerNavigationOptions = {};\n\n  if (drawerContentOptions) {\n    Object.assign(defaultScreenOptions, {\n      drawerPosition: drawerContentOptions.drawerPosition,\n      drawerType: drawerContentOptions.drawerType,\n      swipeEdgeWidth: drawerContentOptions.edgeWidth,\n      drawerHideStatusBarOnOpen: drawerContentOptions.hideStatusBar,\n      keyboardDismissMode: drawerContentOptions.keyboardDismissMode,\n      swipeMinDistance: drawerContentOptions.minSwipeDistance,\n      overlayColor: drawerContentOptions.overlayColor,\n      drawerStatusBarAnimation: drawerContentOptions.statusBarAnimation,\n      gestureHandlerProps: drawerContentOptions.gestureHandlerProps,\n    });\n\n    warnOnce(\n      drawerContentOptions,\n      `Drawer Navigator: 'drawerContentOptions' is deprecated. Migrate the options to 'screenOptions' instead.\\n\\nPlace the following in 'screenOptions' in your code to keep current behavior:\\n\\n${JSON.stringify(\n        defaultScreenOptions,\n        null,\n        2\n      )}\\n\\nSee https://reactnavigation.org/docs/6.x/drawer-navigator#options for more details.`\n    );\n  }\n\n  if (typeof lazy === 'boolean') {\n    defaultScreenOptions.lazy = lazy;\n\n    warnOnce(\n      true,\n      `Drawer Navigator: 'lazy' in props is deprecated. Move it to 'screenOptions' instead.`\n    );\n  }\n\n  const { state, descriptors, navigation } = useNavigationBuilder<\n    DrawerNavigationState<ParamListBase>,\n    DrawerRouterOptions,\n    DrawerActionHelpers<ParamListBase>,\n    DrawerNavigationOptions,\n    DrawerNavigationEventMap\n  >(DrawerRouter, {\n    initialRouteName,\n    openByDefault,\n    backBehavior,\n    children,\n    screenOptions,\n    defaultScreenOptions,\n  });\n\n  return (\n    <DrawerView\n      {...rest}\n      state={state}\n      descriptors={descriptors}\n      navigation={navigation}\n    />\n  );\n}\n\nexport default createNavigatorFactory<\n  DrawerNavigationState<ParamListBase>,\n  DrawerNavigationOptions,\n  DrawerNavigationEventMap,\n  typeof DrawerNavigator\n>(DrawerNavigator);\n"]}