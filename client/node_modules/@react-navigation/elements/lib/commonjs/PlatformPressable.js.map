{"version":3,"sources":["PlatformPressable.tsx"],"names":["ANDROID_VERSION_LOLLIPOP","ANDROID_SUPPORTS_RIPPLE","Platform","OS","Version","PlatformPressable","android_ripple","pressColor","pressOpacity","style","rest","dark","color","undefined","pressed","opacity"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;AAQA,MAAMA,wBAAwB,GAAG,EAAjC;AACA,MAAMC,uBAAuB,GAC3BC,sBAASC,EAAT,KAAgB,SAAhB,IAA6BD,sBAASE,OAAT,IAAoBJ,wBADnD;AAGA;AACA;AACA;;AACe,SAASK,iBAAT,CAA2B;AACxCC,EAAAA,cADwC;AAExCC,EAAAA,UAFwC;AAGxCC,EAAAA,YAHwC;AAIxCC,EAAAA,KAJwC;AAKxC,KAAGC;AALqC,CAA3B,EAML;AACR,QAAM;AAAEC,IAAAA;AAAF,MAAW,uBAAjB;AAEA,sBACE,oBAAC,sBAAD;AACE,IAAA,cAAc,EACZV,uBAAuB,GACnB;AACEW,MAAAA,KAAK,EACHL,UAAU,KAAKM,SAAf,GACIN,UADJ,GAEII,IAAI,GACJ,0BADI,GAEJ,oBANR;AAOE,SAAGL;AAPL,KADmB,GAUnBO,SAZR;AAcE,IAAA,KAAK,EAAE,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAiB,CACtB;AAAEC,MAAAA,OAAO,EAAED,OAAO,IAAI,CAACb,uBAAZ,GAAsCO,YAAtC,GAAqD;AAAhE,KADsB,EAEtB,OAAOC,KAAP,KAAiB,UAAjB,GAA8BA,KAAK,CAAC;AAAEK,MAAAA;AAAF,KAAD,CAAnC,GAAmDL,KAF7B;AAd1B,KAkBMC,IAlBN,EADF;AAsBD","sourcesContent":["import * as React from 'react';\nimport { Platform, Pressable, PressableProps } from 'react-native';\nimport { useTheme } from '@react-navigation/native';\n\nexport type Props = PressableProps & {\n  pressColor?: string;\n  pressOpacity?: number;\n  children: React.ReactNode;\n};\n\nconst ANDROID_VERSION_LOLLIPOP = 21;\nconst ANDROID_SUPPORTS_RIPPLE =\n  Platform.OS === 'android' && Platform.Version >= ANDROID_VERSION_LOLLIPOP;\n\n/**\n * PlatformPressable provides an abstraction on top of Pressable to handle platform differences.\n */\nexport default function PlatformPressable({\n  android_ripple,\n  pressColor,\n  pressOpacity,\n  style,\n  ...rest\n}: Props) {\n  const { dark } = useTheme();\n\n  return (\n    <Pressable\n      android_ripple={\n        ANDROID_SUPPORTS_RIPPLE\n          ? {\n              color:\n                pressColor !== undefined\n                  ? pressColor\n                  : dark\n                  ? 'rgba(255, 255, 255, .32)'\n                  : 'rgba(0, 0, 0, .32)',\n              ...android_ripple,\n            }\n          : undefined\n      }\n      style={({ pressed }) => [\n        { opacity: pressed && !ANDROID_SUPPORTS_RIPPLE ? pressOpacity : 1 },\n        typeof style === 'function' ? style({ pressed }) : style,\n      ]}\n      {...rest}\n    />\n  );\n}\n"]}