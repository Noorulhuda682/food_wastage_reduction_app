{"version":3,"sources":["useLinking.native.tsx"],"names":["isUsingLinking","useLinking","ref","enabled","prefixes","config","getInitialURL","Promise","race","Linking","resolve","setTimeout","subscribe","listener","callback","url","subscription","addEventListener","remove","removeEventListener","getStateFromPath","getStateFromPathDefault","React","useEffect","Error","Platform","OS","join","trim","enabledRef","useRef","prefixesRef","configRef","getInitialURLRef","getStateFromPathRef","current","getInitialState","useCallback","state","then","path","undefined","thenable","onfulfilled","catch","navigation","rootState","getRootState","routes","some","r","routeNames","includes","name","console","warn","action","dispatch","e","message","resetRoot"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAKA;;;;;;;;AAKA,IAAIA,cAAc,GAAG,KAArB;;AAEe,SAASC,UAAT,CACbC,GADa,EAEb;AACEC,EAAAA,OAAO,GAAG,IADZ;AAEEC,EAAAA,QAFF;AAGEC,EAAAA,MAHF;AAIEC,EAAAA,aAAa,GAAG,MACdC,OAAO,CAACC,IAAR,CAAa,CACXC,qBAAQH,aAAR,EADW,EAEX,IAAIC,OAAJ,CAAwBG,OAAD,IACrB;AACA;AACAC,EAAAA,UAAU,CAACD,OAAD,EAAU,GAAV,CAHZ,CAFW,CAAb,CALJ;AAaEE,EAAAA,SAAS,GAAIC,QAAD,IAAc;AACxB,UAAMC,QAAQ,GAAG,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAA8BF,QAAQ,CAACE,GAAD,CAAvD;;AAEA,UAAMC,YAAY,GAAGP,qBAAQQ,gBAAR,CAAyB,KAAzB,EAAgCH,QAAhC,CAArB;;AAIA,WAAO,MAAM;AACX;AACA,UAAIE,YAAJ,aAAIA,YAAJ,eAAIA,YAAY,CAAEE,MAAlB,EAA0B;AACxBF,QAAAA,YAAY,CAACE,MAAb;AACD,OAFD,MAEO;AACLT,6BAAQU,mBAAR,CAA4B,KAA5B,EAAmCL,QAAnC;AACD;AACF,KAPD;AAQD,GA5BH;AA6BEM,EAAAA,gBAAgB,GAAGC;AA7BrB,CAFa,EAiCb;AACAC,EAAAA,KAAK,CAACC,SAAN,CAAgB,MAAM;AACpB,QAAIpB,OAAO,KAAK,KAAZ,IAAqBH,cAAzB,EAAyC;AACvC,YAAM,IAAIwB,KAAJ,CACJ,CACE,6KADF,EAEE,0DAFF,EAGE,sDAHF,EAIEC,sBAASC,EAAT,KAAgB,SAAhB,GACI,sJADJ,GAEI,EANN,EAQGC,IARH,CAQQ,IARR,EASGC,IATH,EADI,CAAN;AAYD,KAbD,MAaO;AACL5B,MAAAA,cAAc,GAAGG,OAAO,KAAK,KAA7B;AACD;;AAED,WAAO,MAAM;AACXH,MAAAA,cAAc,GAAG,KAAjB;AACD,KAFD;AAGD,GArBD,EADA,CAwBA;AACA;AACA;;AACA,QAAM6B,UAAU,GAAGP,KAAK,CAACQ,MAAN,CAAa3B,OAAb,CAAnB;AACA,QAAM4B,WAAW,GAAGT,KAAK,CAACQ,MAAN,CAAa1B,QAAb,CAApB;AACA,QAAM4B,SAAS,GAAGV,KAAK,CAACQ,MAAN,CAAazB,MAAb,CAAlB;AACA,QAAM4B,gBAAgB,GAAGX,KAAK,CAACQ,MAAN,CAAaxB,aAAb,CAAzB;AACA,QAAM4B,mBAAmB,GAAGZ,KAAK,CAACQ,MAAN,CAAaV,gBAAb,CAA5B;AAEAE,EAAAA,KAAK,CAACC,SAAN,CAAgB,MAAM;AACpBM,IAAAA,UAAU,CAACM,OAAX,GAAqBhC,OAArB;AACA4B,IAAAA,WAAW,CAACI,OAAZ,GAAsB/B,QAAtB;AACA4B,IAAAA,SAAS,CAACG,OAAV,GAAoB9B,MAApB;AACA4B,IAAAA,gBAAgB,CAACE,OAAjB,GAA2B7B,aAA3B;AACA4B,IAAAA,mBAAmB,CAACC,OAApB,GAA8Bf,gBAA9B;AACD,GAND,EAMG,CAACf,MAAD,EAASF,OAAT,EAAkBC,QAAlB,EAA4BE,aAA5B,EAA2Cc,gBAA3C,CANH;AAQA,QAAMgB,eAAe,GAAGd,KAAK,CAACe,WAAN,CAAkB,MAAM;AAC9C,QAAIC,KAAJ;;AAEA,QAAIT,UAAU,CAACM,OAAf,EAAwB;AACtB,YAAMpB,GAAG,GAAGkB,gBAAgB,CAACE,OAAjB,EAAZ;;AAEA,UAAIpB,GAAG,IAAI,IAAP,IAAe,OAAOA,GAAP,KAAe,QAAlC,EAA4C;AAC1C,eAAOA,GAAG,CAACwB,IAAJ,CAAUxB,GAAD,IAAS;AACvB,gBAAMyB,IAAI,GAAGzB,GAAG,GACZ,iCAAmBgB,WAAW,CAACI,OAA/B,EAAwCpB,GAAxC,CADY,GAEZ,IAFJ;AAIA,iBAAOyB,IAAI,GACPN,mBAAmB,CAACC,OAApB,CAA4BK,IAA5B,EAAkCR,SAAS,CAACG,OAA5C,CADO,GAEPM,SAFJ;AAGD,SARM,CAAP;AASD;;AAED,YAAMD,IAAI,GAAGzB,GAAG,GAAG,iCAAmBgB,WAAW,CAACI,OAA/B,EAAwCpB,GAAxC,CAAH,GAAkD,IAAlE;AAEAuB,MAAAA,KAAK,GAAGE,IAAI,GACRN,mBAAmB,CAACC,OAApB,CAA4BK,IAA5B,EAAkCR,SAAS,CAACG,OAA5C,CADQ,GAERM,SAFJ;AAGD;;AAED,UAAMC,QAAQ,GAAG;AACfH,MAAAA,IAAI,CAACI,WAAD,EAAyD;AAC3D,eAAOpC,OAAO,CAACG,OAAR,CAAgBiC,WAAW,GAAGA,WAAW,CAACL,KAAD,CAAd,GAAwBA,KAAnD,CAAP;AACD,OAHc;;AAIfM,MAAAA,KAAK,GAAG;AACN,eAAOF,QAAP;AACD;;AANc,KAAjB;AASA,WAAOA,QAAP;AACD,GAnCuB,EAmCrB,EAnCqB,CAAxB;AAqCApB,EAAAA,KAAK,CAACC,SAAN,CAAgB,MAAM;AACpB,UAAMV,QAAQ,GAAIE,GAAD,IAAiB;AAChC,UAAI,CAACZ,OAAL,EAAc;AACZ;AACD;;AAED,YAAMqC,IAAI,GAAG,iCAAmBT,WAAW,CAACI,OAA/B,EAAwCpB,GAAxC,CAAb;AACA,YAAM8B,UAAU,GAAG3C,GAAG,CAACiC,OAAvB;;AAEA,UAAIU,UAAU,IAAIL,IAAlB,EAAwB;AACtB,cAAMF,KAAK,GAAGJ,mBAAmB,CAACC,OAApB,CAA4BK,IAA5B,EAAkCR,SAAS,CAACG,OAA5C,CAAd;;AAEA,YAAIG,KAAJ,EAAW;AACT;AACA;AACA,gBAAMQ,SAAS,GAAGD,UAAU,CAACE,YAAX,EAAlB;;AAEA,cACET,KAAK,CAACU,MAAN,CAAaC,IAAb,CAAmBC,CAAD,IAAO,EAACJ,SAAD,aAACA,SAAD,eAACA,SAAS,CAAEK,UAAX,CAAsBC,QAAtB,CAA+BF,CAAC,CAACG,IAAjC,CAAD,CAAzB,CADF,EAEE;AACAC,YAAAA,OAAO,CAACC,IAAR,CACE,0SADF;AAGA;AACD;;AAED,gBAAMC,MAAM,GAAG,8BAAmBlB,KAAnB,EAA0BN,SAAS,CAACG,OAApC,CAAf;;AAEA,cAAIqB,MAAM,KAAKf,SAAf,EAA0B;AACxB,gBAAI;AACFI,cAAAA,UAAU,CAACY,QAAX,CAAoBD,MAApB;AACD,aAFD,CAEE,OAAOE,CAAP,EAAU;AACV;AACA;AACAJ,cAAAA,OAAO,CAACC,IAAR,CACG,qDAAoDf,IAAK,MAAKkB,CAAC,CAACC,OAAQ,EAD3E;AAGD;AACF,WAVD,MAUO;AACLd,YAAAA,UAAU,CAACe,SAAX,CAAqBtB,KAArB;AACD;AACF;AACF;AACF,KA1CD;;AA4CA,WAAO1B,SAAS,CAACC,QAAD,CAAhB;AACD,GA9CD,EA8CG,CAACV,OAAD,EAAUD,GAAV,EAAeU,SAAf,CA9CH;AAgDA,SAAO;AACLwB,IAAAA;AADK,GAAP;AAGD","sourcesContent":["import * as React from 'react';\nimport { Linking, Platform } from 'react-native';\nimport {\n  getActionFromState,\n  getStateFromPath as getStateFromPathDefault,\n  NavigationContainerRef,\n} from '@react-navigation/core';\nimport extractPathFromURL from './extractPathFromURL';\nimport type { LinkingOptions } from './types';\n\ntype ResultState = ReturnType<typeof getStateFromPathDefault>;\n\nlet isUsingLinking = false;\n\nexport default function useLinking(\n  ref: React.RefObject<NavigationContainerRef>,\n  {\n    enabled = true,\n    prefixes,\n    config,\n    getInitialURL = () =>\n      Promise.race([\n        Linking.getInitialURL(),\n        new Promise<undefined>((resolve) =>\n          // Timeout in 150ms if `getInitialState` doesn't resolve\n          // Workaround for https://github.com/facebook/react-native/issues/25675\n          setTimeout(resolve, 150)\n        ),\n      ]),\n    subscribe = (listener) => {\n      const callback = ({ url }: { url: string }) => listener(url);\n\n      const subscription = Linking.addEventListener('url', callback) as\n        | { remove(): void }\n        | undefined;\n\n      return () => {\n        // https://github.com/facebook/react-native/commit/6d1aca806cee86ad76de771ed3a1cc62982ebcd7\n        if (subscription?.remove) {\n          subscription.remove();\n        } else {\n          Linking.removeEventListener('url', callback);\n        }\n      };\n    },\n    getStateFromPath = getStateFromPathDefault,\n  }: LinkingOptions\n) {\n  React.useEffect(() => {\n    if (enabled !== false && isUsingLinking) {\n      throw new Error(\n        [\n          'Looks like you have configured linking in multiple places. This is likely an error since deep links should only be handled in one place to avoid conflicts. Make sure that:',\n          \"- You are not using both 'linking' prop and 'useLinking'\",\n          \"- You don't have 'useLinking' in multiple components\",\n          Platform.OS === 'android'\n            ? \"- You have set 'android:launchMode=singleTask' in the '<activity />' section of the 'AndroidManifest.xml' file to avoid launching multiple instances\"\n            : '',\n        ]\n          .join('\\n')\n          .trim()\n      );\n    } else {\n      isUsingLinking = enabled !== false;\n    }\n\n    return () => {\n      isUsingLinking = false;\n    };\n  });\n\n  // We store these options in ref to avoid re-creating getInitialState and re-subscribing listeners\n  // This lets user avoid wrapping the items in `React.useCallback` or `React.useMemo`\n  // Not re-creating `getInitialState` is important coz it makes it easier for the user to use in an effect\n  const enabledRef = React.useRef(enabled);\n  const prefixesRef = React.useRef(prefixes);\n  const configRef = React.useRef(config);\n  const getInitialURLRef = React.useRef(getInitialURL);\n  const getStateFromPathRef = React.useRef(getStateFromPath);\n\n  React.useEffect(() => {\n    enabledRef.current = enabled;\n    prefixesRef.current = prefixes;\n    configRef.current = config;\n    getInitialURLRef.current = getInitialURL;\n    getStateFromPathRef.current = getStateFromPath;\n  }, [config, enabled, prefixes, getInitialURL, getStateFromPath]);\n\n  const getInitialState = React.useCallback(() => {\n    let state: ResultState | undefined;\n\n    if (enabledRef.current) {\n      const url = getInitialURLRef.current();\n\n      if (url != null && typeof url !== 'string') {\n        return url.then((url) => {\n          const path = url\n            ? extractPathFromURL(prefixesRef.current, url)\n            : null;\n\n          return path\n            ? getStateFromPathRef.current(path, configRef.current)\n            : undefined;\n        });\n      }\n\n      const path = url ? extractPathFromURL(prefixesRef.current, url) : null;\n\n      state = path\n        ? getStateFromPathRef.current(path, configRef.current)\n        : undefined;\n    }\n\n    const thenable = {\n      then(onfulfilled?: (state: ResultState | undefined) => void) {\n        return Promise.resolve(onfulfilled ? onfulfilled(state) : state);\n      },\n      catch() {\n        return thenable;\n      },\n    };\n\n    return thenable as PromiseLike<ResultState | undefined>;\n  }, []);\n\n  React.useEffect(() => {\n    const listener = (url: string) => {\n      if (!enabled) {\n        return;\n      }\n\n      const path = extractPathFromURL(prefixesRef.current, url);\n      const navigation = ref.current;\n\n      if (navigation && path) {\n        const state = getStateFromPathRef.current(path, configRef.current);\n\n        if (state) {\n          // Make sure that the routes in the state exist in the root navigator\n          // Otherwise there's an error in the linking configuration\n          const rootState = navigation.getRootState();\n\n          if (\n            state.routes.some((r) => !rootState?.routeNames.includes(r.name))\n          ) {\n            console.warn(\n              \"The navigation state parsed from the URL contains routes not present in the root navigator. This usually means that the linking configuration doesn't match the navigation structure. See https://reactnavigation.org/docs/configuring-links for more details on how to specify a linking configuration.\"\n            );\n            return;\n          }\n\n          const action = getActionFromState(state, configRef.current);\n\n          if (action !== undefined) {\n            try {\n              navigation.dispatch(action);\n            } catch (e) {\n              // Ignore any errors from deep linking.\n              // This could happen in case of malformed links, navigation object not being initialized etc.\n              console.warn(\n                `An error occurred when trying to handle the link '${path}': ${e.message}`\n              );\n            }\n          } else {\n            navigation.resetRoot(state);\n          }\n        }\n      }\n    };\n\n    return subscribe(listener);\n  }, [enabled, ref, subscribe]);\n\n  return {\n    getInitialState,\n  };\n}\n"]}